## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Products Management'
description: |-

  APIs for managing car products (Cars for sale).
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: 'Products Management'
      groupDescription: |-

        APIs for managing car products (Cars for sale).
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Products'
      description: 'Retrieve a list of all products (cars) in the system.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "data": [
               {
                   "id": 1,
                   "title": "Toyota Corolla",
                   "description": "A reliable and efficient car",
                   "model_car": "2024",
                   "price": "25000.00",
                   "car_status": "جديدة",
                   "engine_number": "6",
                   "fuel_type": "بترول",
                   "latitude": "15.3694",
                   "longitude": "44.1910",
                   "brand_id": 1,
                   "province_id": 2,
                   "created_at": "2025-10-13T14:36:35.000000Z",
                   "updated_at": "2025-10-13T14:36:35.000000Z"
               }
           ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "success": false,
           "message": "Failed to fetch products: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: 'Products Management'
      groupDescription: |-

        APIs for managing car products (Cars for sale).
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Single Product'
      description: 'Retrieve a single product by its ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "data": {
               "id": 1,
               "title": "Toyota Corolla",
               "description": "Reliable car",
               "price": "25000.00"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "success": false,
           "message": "Product not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: 'Products Management'
      groupDescription: |-

        APIs for managing car products (Cars for sale).
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Product'
      description: 'Delete a product by its ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "message": "Product deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "success": false,
           "message": "Failed to delete product: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
