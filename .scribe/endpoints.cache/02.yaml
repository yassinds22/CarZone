## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/auth/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user by ID'
      description: 'This endpoint retrieves detailed information about a specific user by their ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "User retrieved successfully",
            "user": {
              "id": 5,
              "name": "Yassin Ali",
              "email": "yassin@example.com",
              "phone": "+967770000000",
              "created_at": "2025-10-13T12:45:00.000000Z",
              "updated_at": "2025-10-13T12:45:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user by ID'
      description: 'This endpoint retrieves detailed information about a specific user by their ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "User retrieved successfully",
            "user": {
              "id": 5,
              "name": "Yassin Ali",
              "email": "yassin@example.com",
              "phone": "+967770000000",
              "created_at": "2025-10-13T12:45:00.000000Z",
              "updated_at": "2025-10-13T12:45:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/allData/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user by ID'
      description: 'This endpoint retrieves detailed information about a specific user by their ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "User retrieved successfully",
            "user": {
              "id": 5,
              "name": "Yassin Ali",
              "email": "yassin@example.com",
              "phone": "+967770000000",
              "created_at": "2025-10-13T12:45:00.000000Z",
              "updated_at": "2025-10-13T12:45:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
