## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Products Management'
description: |-

  APIs for managing car products (Cars for sale).
endpoints:
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: 'Products Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create New Product'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_SANCTUM_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The product title.'
        required: true
        example: 'Toyota Corolla'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The product description.'
        required: true
        example: 'A reliable and fuel-efficient car.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      model_car:
        name: model_car
        description: 'The model year or name.'
        required: true
        example: '2024 XLE'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price:
        name: price
        description: 'Product price.'
        required: true
        example: '25000.00'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      car_status:
        name: car_status
        description: 'Car condition.'
        required: true
        example: جديدة
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      engine_number:
        name: engine_number
        description: 'Engine type.'
        required: true
        example: '6'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fuel_type:
        name: fuel_type
        description: 'Fuel type.'
        required: true
        example: بترول
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'optional Latitude for map location.'
        required: false
        example: '15.3694'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      longitude:
        name: longitude
        description: 'optional Longitude for map location.'
        required: false
        example: '44.1910'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      brand_id:
        name: brand_id
        description: 'Brand ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      province_id:
        name: province_id
        description: 'Province ID.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      main_image:
        name: main_image
        description: 'The main car image. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sub_image:
        name: sub_image
        description: 'The secondary image for the car. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image1:
        name: image1
        description: 'Main image'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image2:
        name: image2
        description: 'optional Secondary image'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Toyota Corolla'
      description: 'A reliable and fuel-efficient car.'
      model_car: '2024 XLE'
      price: '25000.00'
      car_status: جديدة
      engine_number: '6'
      fuel_type: بترول
      latitude: '15.3694'
      longitude: '44.1910'
      brand_id: 1
      province_id: 2
      user_id: consequatur
    fileParameters:
      main_image: null
      sub_image: null
      image1: null
      image2: null
    responses:
      -
        status: 201
        content: |-
          {
           "success": true,
           "message": "Product created successfully.",
           "data": { ... }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "success": false,
           "message": "Failed to create product: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_SANCTUM_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/products/{id}'
    metadata:
      groupName: 'Products Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Product'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_SANCTUM_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'optional The new title.'
        required: false
        example: 'Toyota Camry'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The product description.'
        required: true
        example: 'A reliable and fuel-efficient car with modern features.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      model_car:
        name: model_car
        description: 'The model name or number. Must not be greater than 255 characters.'
        required: true
        example: '2024 XLE'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      price:
        name: price
        description: 'optional The new price.'
        required: false
        example: '27000.00'
        type: decimal
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      car_status:
        name: car_status
        description: 'The status of the car.'
        required: true
        example: جديدة
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      engine_number:
        name: engine_number
        description: 'Engine type (4, 6, 8).'
        required: true
        example: '6'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      fuel_type:
        name: fuel_type
        description: 'Fuel type.'
        required: true
        example: بترول
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'The latitude for map location.'
        required: false
        example: '15.3694'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      longitude:
        name: longitude
        description: 'The longitude for map location.'
        required: false
        example: '44.1910'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      brand_id:
        name: brand_id
        description: 'The brand ID. The <code>id</code> of an existing record in the brands table.'
        required: true
        example: 1
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      province_id:
        name: province_id
        description: 'The province ID. The <code>id</code> of an existing record in the provinces table.'
        required: true
        example: 2
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      main_image:
        name: main_image
        description: 'The main car image. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sub_image:
        name: sub_image
        description: 'The secondary image for the car. Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image1:
        name: image1
        description: 'optional The new main image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image2:
        name: image2
        description: 'optional The new secondary image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Toyota Camry'
      description: 'A reliable and fuel-efficient car with modern features.'
      model_car: '2024 XLE'
      price: '27000.00'
      car_status: جديدة
      engine_number: '6'
      fuel_type: بترول
      latitude: '15.3694'
      longitude: '44.1910'
      brand_id: 1
      province_id: 2
      user_id: consequatur
    fileParameters:
      main_image: null
      sub_image: null
      image1: null
      image2: null
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "message": "Product updated successfully.",
           "data": {
               "id": 1,
               "title": "Toyota Camry",
               "price": "27000.00",
               "updated_at": "2025-10-14T10:00:00Z"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "success": false,
           "message": "Failed to update product: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_SANCTUM_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: 'Products Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Product'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_SANCTUM_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "message": "Product deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "success": false,
           "message": "Failed to delete product: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_SANCTUM_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: 'Products Management'
      groupDescription: |-

        APIs for managing car products (Cars for sale).
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Products'
      description: |-
        Retrieve a list of all products (cars) in the system.
        Each product includes main_image_url and sub_image_url for the associated images.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "data": [
               {
                   "id": 1,
                   "title": "Toyota Corolla",
                   "description": "A reliable and efficient car",
                   "model_car": "2024",
                   "price": "25000.00",
                   "car_status": "جديدة",
                   "engine_number": "6",
                   "fuel_type": "بترول",
                   "latitude": "15.3694",
                   "longitude": "44.1910",
                   "brand_id": 1,
                   "province_id": 2,
                   "created_at": "2025-10-13T14:36:35.000000Z",
                   "updated_at": "2025-10-13T14:36:35.000000Z",
                   "main_image_url": "http://example.com/storage/products/main_image.jpg",
                   "sub_image_url": "http://example.com/storage/products/sub_image.jpg"
               }
           ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "success": false,
           "message": "Failed to fetch products: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: 'Products Management'
      groupDescription: |-

        APIs for managing car products (Cars for sale).
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Product'
      description: |-
        Retrieve a single product by its ID.
        Includes main_image_url and sub_image_url for the associated images.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "data": {
               "id": 1,
               "title": "Toyota Corolla",
               "description": "A reliable and efficient car",
               "model_car": "2024",
               "price": "25000.00",
               "main_image_url": "http://example.com/storage/products/main_image.jpg",
               "sub_image_url": "http://example.com/storage/products/sub_image.jpg"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "success": false,
           "message": "Product not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "success": false,
           "message": "Failed to fetch product: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
