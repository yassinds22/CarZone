name: 'Brand Management'
description: |-

  APIs for managing brands in the system.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/brands
    metadata:
      groupName: 'Brand Management'
      groupDescription: |-

        APIs for managing brands in the system.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all brands'
      description: 'Retrieve a list of all brands.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "name": "Toyota",
                "created_at": "2025-10-13T14:36:35.000000Z",
                "updated_at": "2025-10-13T14:36:35.000000Z",
                "media": [
                  {
                    "url": "http://127.0.0.1:8000/storage/brands/1634567890_image.png"
                  }
                ]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/brands
    metadata:
      groupName: 'Brand Management'
      groupDescription: |-

        APIs for managing brands in the system.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new brand'
      description: 'Create a new brand with optional image upload.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The brand name.'
        required: true
        example: Samsung
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Whether the brand is active (optional).'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Samsung
      is_active: true
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Brand created successfully.",
            "data": {
              "id": 1,
              "name": "Toyota",
              "created_at": "2025-10-13T14:36:35.000000Z",
              "updated_at": "2025-10-13T14:36:35.000000Z",
              "media": [
                {
                  "url": "http://127.0.0.1:8000/storage/brands/1634567890_image.png"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Failed to create brand: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/brands/{id}'
    metadata:
      groupName: 'Brand Management'
      groupDescription: |-

        APIs for managing brands in the system.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show brand details'
      description: 'Display a specific brand by ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Toyota",
            "created_at": "2025-10-13T14:36:35.000000Z",
            "updated_at": "2025-10-13T14:36:35.000000Z",
            "media": [
              {
                "url": "http://127.0.0.1:8000/storage/brands/1634567890_image.png"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/brands/{id}'
    metadata:
      groupName: 'Brand Management'
      groupDescription: |-

        APIs for managing brands in the system.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update brand'
      description: 'Update an existing brand with optional image replacement.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The brand name.'
        required: true
        example: Samsung
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Whether the brand is active (optional).'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Samsung
      is_active: true
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Brand updated successfully.",
            "data": {
              "id": 1,
              "name": "Toyota Updated",
              "created_at": "2025-10-13T14:36:35.000000Z",
              "updated_at": "2025-10-13T17:22:00.000000Z",
              "media": [
                {
                  "url": "http://127.0.0.1:8000/storage/brands/1634567890_new_image.png"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Failed to update brand: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/brands/{id}'
    metadata:
      groupName: 'Brand Management'
      groupDescription: |-

        APIs for managing brands in the system.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete brand'
      description: 'Remove a brand by ID.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Brand deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Failed to delete brand: [error message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
